// This file is generated by ConstMaker, DON'T MODIFY.

/**
 *this is a test
 */
const val Table: String = "table" // hello word
const val AllowTest: String = "at"
const val Percent: UByte = 100

/** pi */
const val Pi: Float = 3.14159f

/**
 * colors
 */
enum class Colors(val value: UShort) {
    KNoneDef(0),
    KBlueDef((1 << 0)),
    KGreenDef((1 << 1)),
    KRedDef((1 << 2)),
    KAllDef(0x7);
}
const val ColorsKNoneDefStr: String = "KNoneDef"
const val ColorsKBlueDefStr: String = "KBlueDef"
const val ColorsKGreenDefStr: String = "KGreenDef"
const val ColorsKRedDefStr: String = "KRedDef"
const val ColorsKAllDefStr: String = "KAllDef"

object Node {
    const val HtmlBlockId: String = "Block"
    const val HtmlTableId: String = "Table"
}

object Item {
    const val AllowTest: String = "at"
    const val Pi: Float = 3.14159f
    const val Table: String = "table"
    const val Percent: Byte = 100
    const val NoneId: UByte = 0
    const val AllowTestId: UByte = (1 << 0)
    const val PiId: UByte = (1 << 1)
    const val TableId: UByte = (1 << 2)
    const val PercentId: UByte = (1 << 3)
    const val AllId: UByte = 0xf

    enum class Colors(val value: UByte) {
        Blue,
        Green, // green
        Red
    }
}

object ItemNode {
    const val Border: String = "border"

    enum class Colors(val value: UByte) {
        Red,
        Green, // green
        Blue
    }
    const val ColorsRedStr: String = "Red"
    const val ColorsGreenStr: String = "Green"
    const val ColorsBlueStr: String = "Blue"
}

object ItemNodeQuick {
    const val Item: String = "item"
}

object ItemNodeQuickNode {
}

object Css3 {
    const val XWebkitAirplay: String = "x-webkit-airplay"
    const val WebkitTextZoom: String = "-webkit-text-zoom"
    const val WebkitBackdropFilter: String = "-webkit-backdrop-filter"
    const val WebkitBorderHorizontalSpacing: String = "-webkit-border-horizontal-spacing"
    const val WebkitBorderVerticalSpacing: String = "-webkit-border-vertical-spacing"
    const val WebkitBoxAlign: String = "-webkit-box-align"
    const val NoneId: UByte = 0
    const val XWebkitAirplayId: UByte = (1 << 0)
    const val WebkitTextZoomId: UByte = (1 << 1)
    const val WebkitBackdropFilterId: UByte = (1 << 2)
    const val WebkitBorderHorizontalSpacingId: UByte = (1 << 3)
    const val WebkitBorderVerticalSpacingId: UByte = (1 << 4)
    const val WebkitBoxAlignId: UByte = (1 << 5)
    const val AllId: UByte = 0x3f
}